import React from "react";
import { motion } from "framer-motion";
import { useInView } from "react-intersection-observer";
import Image from "/pwlogo.jpg"

const Hand = () => (
  <motion.svg
    width="80"
    height="80"
    viewBox="0 0 160 150"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    initial={{ strokeDasharray: "0, 500" }}
    animate={{ strokeDasharray: "600, 500" }}
    transition={{ duration: 3, delay: 3, ease: "linear" }}
  >
    <rect
      x="4.75"
      y="7.75"
      width="143.5"
      height="143.5"
      rx="15.25"
      stroke="#0056E0"
      stroke-width="1.5"
    />
    <g opacity="0.1" filter="url(#filter0_f_0_1)">
      <rect x="24" y="24" width="126" height="126" rx="16" fill="#0056E0" />
    </g>
    <rect x="14" y="16" width="126" height="126" rx="16" fill="white" />
    <path
      d="M81.6328 60.25C81.6328 61.5444 82.6822 62.5938 83.9766 62.5938H88.6641C89.9584 62.5938 91.0078 61.5444 91.0078 60.25C91.0078 58.9556 89.9584 57.9062 88.6641 57.9062H83.9766C82.6822 57.9062 81.6328 58.9556 81.6328 60.25Z"
      fill="#6200EE"
    />
    <path
      d="M81.5166 51.9635L84.8312 48.649C85.7465 47.7337 85.7465 46.2497 84.8312 45.3344C83.916 44.4191 82.432 44.4191 81.5166 45.3344L78.2021 48.649C77.2868 49.5643 77.2868 51.0482 78.2021 51.9635C79.1173 52.8788 80.6015 52.8788 81.5166 51.9635Z"
      fill="#6200EE"
    />
    <path
      d="M58.3135 51.9635C59.2287 52.8788 60.7129 52.8788 61.628 51.9635C62.5434 51.0482 62.5434 49.5643 61.628 48.649L58.3135 45.3344C57.3984 44.4191 55.9143 44.4191 54.999 45.3344C54.0837 46.2497 54.0837 47.7337 54.999 48.649L58.3135 51.9635Z"
      fill="#6200EE"
    />
    <path
      d="M58.1953 60.25C58.1953 58.9556 57.1459 57.9062 55.8516 57.9062H51.1641C49.8697 57.9062 48.8203 58.9556 48.8203 60.25C48.8203 61.5444 49.8697 62.5938 51.1641 62.5938H55.8516C57.1459 62.5938 58.1953 61.5444 58.1953 60.25Z"
      fill="#6200EE"
    />
    <path
      d="M69.9141 48.2188C71.2084 48.2188 72.2578 47.1694 72.2578 45.875V41.3438C72.2578 40.0494 71.2084 39 69.9141 39C68.6197 39 67.5703 40.0494 67.5703 41.3438V45.875C67.5703 47.1694 68.6197 48.2188 69.9141 48.2188Z"
      fill="#6200EE"
    />
    <path
      d="M100.137 74.4219C97.35 74.4219 95.0906 76.6813 95.0906 79.4703V77.7875C95.0906 75 92.8047 72.7391 90.0172 72.7391C87.2367 72.7391 84.9703 74.9938 84.9703 77.7875V75.9359C84.9703 73.1573 82.7003 70.9041 79.925 70.8897C77.1056 70.8777 74.8516 73.1552 74.8516 75.9359V58.2656C74.8516 55.4781 72.5906 53.2188 69.8031 53.2188C67.0158 53.2188 64.7562 55.4783 64.7562 58.2656V92.125C64.7562 93.4194 63.7069 94.4688 62.4125 94.4688C61.1181 94.4688 60.0687 93.4194 60.0687 92.125V79.6141C56.8714 81.3036 54.7109 84.6416 54.7109 88.5484L54.7375 94.1156C54.7641 101.053 58.6437 107.402 64.8078 110.588C64.8078 115.231 68.5716 119 73.2188 119H91.0016C95.6469 119 99.4141 115.234 99.4141 110.588V108.917C103.083 105.696 105.184 101.057 105.184 96.175V79.4688C105.184 76.6812 102.925 74.4219 100.137 74.4219Z"
      fill="#6200EE"
    />
    <defs>
      <filter
        id="filter0_f_0_1"
        x="0"
        y="0"
        width="174"
        height="174"
        filterUnits="userSpaceOnUse"
        color-interpolation-filters="sRGB"
      >
        <feFlood flood-opacity="0" result="BackgroundImageFix" />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="BackgroundImageFix"
          result="shape"
        />
        <feGaussianBlur stdDeviation="12" result="effect1_foregroundBlur_0_1" />
      </filter>
    </defs>
  </motion.svg>
);
const Graph = () => (
  <motion.svg
    width="80"
    height="80"
    viewBox="0 0 150 150"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    initial={{ strokeDasharray: "0, 500" }}
    animate={{ strokeDasharray: "600, 500" }}
    transition={{ duration: 3, delay: 9, ease: "linear" }}
  >
    <g opacity="0.1" filter="url(#filter0_f_0_1)">
      <rect x="26" y="24" width="126" height="126" rx="16" fill="#0056E0" />
    </g>
    <rect x="10" y="11" width="126" height="126" rx="16" fill="white" />
    <path
      d="M75.7346 71C73.8692 71.0113 72.0037 71.0269 70.1383 71.047C69.544 71.0537 69.0559 71.5392 69.049 72.1312C69.0158 75.0398 68.9995 93.1533 69 98.3475C69.0001 98.9021 69.4502 99.3399 70.0048 99.3376C71.1904 99.3327 73.317 99.3274 75.7935 99.3378C76.35 99.3401 76.8028 98.894 76.8007 98.3375C76.7766 91.9311 76.778 77.5223 76.805 72.0734C76.808 71.4773 76.3289 70.9964 75.7346 71Z"
      fill="#6200EE"
    />
    <path
      d="M99.7346 52C97.8692 52.0113 96.0037 52.0269 94.1383 52.047C93.544 52.0537 93.0559 52.5392 93.049 53.1312C93.0158 56.0398 92.9995 74.1533 93 79.3475C93.0001 79.9021 93.4502 80.3399 94.0048 80.3376C95.1904 80.3327 97.317 80.3274 99.7935 80.3378C100.35 80.3401 100.803 79.894 100.801 79.3375C100.777 72.9311 100.778 58.5223 100.805 53.0734C100.808 52.4773 100.329 51.9964 99.7346 52Z"
      fill="#6200EE"
    />
    <path
      d="M51.7736 77C49.9083 77.0113 48.0427 77.0269 46.1773 77.047C45.583 77.0537 45.0949 77.5392 45.088 78.1312C45.0549 81.0398 45.0386 99.1533 45.0391 104.348C45.0391 104.902 45.4892 105.34 46.0438 105.338C47.2294 105.333 49.3561 105.327 51.8326 105.338C52.3891 105.34 52.8418 104.894 52.8397 104.337C52.8156 97.9311 52.8171 83.5223 52.8441 78.0734C52.847 77.4773 52.3679 76.9964 51.7736 77Z"
      fill="#6200EE"
    />
    <path
      d="M63.7346 65C61.8692 65.0113 60.0037 65.0269 58.1383 65.047C57.544 65.0537 57.0559 65.5392 57.049 66.1312C57.0158 69.0398 56.9995 87.1533 57 92.3475C57.0001 92.9021 57.4502 93.3399 58.0048 93.3376C59.1904 93.3327 61.317 93.3274 63.7935 93.3378C64.35 93.3401 64.8028 92.894 64.8007 92.3375C64.7766 85.9311 64.778 71.5223 64.805 66.0734C64.808 65.4773 64.3289 64.9964 63.7346 65Z"
      fill="#6200EE"
    />
    <path
      d="M87.7346 59C85.8692 59.0113 84.0037 59.0269 82.1383 59.047C81.544 59.0537 81.0559 59.5392 81.049 60.1312C81.0158 63.0398 80.9995 81.1533 81 86.3475C81.0001 86.9021 81.4502 87.3399 82.0048 87.3376C83.1904 87.3327 85.317 87.3274 87.7935 87.3378C88.35 87.3401 88.8028 86.894 88.8007 86.3375C88.7766 79.9311 88.778 65.5223 88.805 60.0734C88.808 59.4773 88.3289 58.9964 87.7346 59Z"
      fill="#6200EE"
    />
    <path d="M45 62L57.7637 43.9968L70.0907 53.2555L95 30.5" stroke="#6200EE" />
    <circle cx="58" cy="44" r="2" fill="#6200EE" />
    <circle cx="70" cy="53" r="2" fill="#6200EE" />
    <circle cx="95" cy="31" r="2" fill="#6200EE" />
    <circle cx="45" cy="61" r="2" fill="#6200EE" />
    <rect
      x="0.75"
      y="2.75"
      width="143.5"
      height="143.5"
      rx="15.25"
      stroke="#0056E0"
      stroke-width="1.5"
    />
    <defs>
      <filter
        id="filter0_f_0_1"
        x="2"
        y="0"
        width="174"
        height="174"
        filterUnits="userSpaceOnUse"
        color-interpolation-filters="sRGB"
      >
        <feFlood flood-opacity="0" result="BackgroundImageFix" />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="BackgroundImageFix"
          result="shape"
        />
        <feGaussianBlur stdDeviation="12" result="effect1_foregroundBlur_0_1" />
      </filter>
    </defs>
  </motion.svg>
);
const Bar = () => (
  <motion.svg
    width="80"
    height="80"
    viewBox="0 0 150 150"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    initial={{ strokeDasharray: "0, 500" }}
    animate={{ strokeDasharray: "600, 500" }}
    transition={{ duration: 3, delay: 6, ease: "linear" }}
  >
    <rect
      x="0.75"
      y="1.75"
      width="143.5"
      height="143.5"
      rx="15.25"
      stroke="#0056E0"
      stroke-width="1.5"
    />
    <g opacity="0.1" filter="url(#filter0_f_0_1)">
      <rect x="24" y="24" width="126" height="126" rx="16" fill="#0056E0" />
    </g>
    <rect x="10" y="10" width="126" height="126" rx="16" fill="white" />
    <path
      d="M51.4688 64.125H55.6562V99.7188C55.6562 100.274 55.4357 100.807 55.043 101.199C54.6504 101.592 54.1178 101.812 53.5625 101.812C53.0072 101.812 52.4746 101.592 52.082 101.199C51.6893 100.807 51.4688 100.274 51.4688 99.7188V64.125ZM72.4062 99.7188C72.4062 100.274 72.6268 100.807 73.0195 101.199C73.4121 101.592 73.9447 101.812 74.5 101.812C75.0553 101.812 75.5879 101.592 75.9805 101.199C76.3732 100.807 76.5938 100.274 76.5938 99.7188V80.875H72.4062V99.7188ZM76.5938 45.2812C76.5938 44.726 76.3732 44.1934 75.9805 43.8007C75.5879 43.4081 75.0553 43.1875 74.5 43.1875C73.9447 43.1875 73.4121 43.4081 73.0195 43.8007C72.6268 44.1934 72.4062 44.726 72.4062 45.2812V64.125H76.5938V45.2812ZM93.3438 99.7188C93.3438 100.274 93.5643 100.807 93.957 101.199C94.3496 101.592 94.8822 101.812 95.4375 101.812C95.9928 101.812 96.5254 101.592 96.918 101.199C97.3107 100.807 97.5312 100.274 97.5312 99.7188V64.125H93.3438V99.7188ZM99.625 49.4688H91.25C90.1394 49.4688 89.0743 49.9099 88.289 50.6952C87.5037 51.4805 87.0625 52.5457 87.0625 53.6562V57.8438C87.0625 58.9543 87.5037 60.0195 88.289 60.8048C89.0743 61.5901 90.1394 62.0312 91.25 62.0312H99.625C100.736 62.0312 101.801 61.5901 102.586 60.8048C103.371 60.0195 103.812 58.9543 103.812 57.8438V53.6562C103.812 52.5457 103.371 51.4805 102.586 50.6952C101.801 49.9099 100.736 49.4688 99.625 49.4688ZM78.6875 66.2188H70.3125C69.2019 66.2188 68.1368 66.6599 67.3515 67.4452C66.5662 68.2305 66.125 69.2957 66.125 70.4062V74.5938C66.125 75.7043 66.5662 76.7695 67.3515 77.5548C68.1368 78.3401 69.2019 78.7812 70.3125 78.7812H78.6875C79.7981 78.7812 80.8632 78.3401 81.6485 77.5548C82.4338 76.7695 82.875 75.7043 82.875 74.5938V70.4062C82.875 69.2957 82.4338 68.2305 81.6485 67.4452C80.8632 66.6599 79.7981 66.2188 78.6875 66.2188ZM57.75 49.4688H49.375C48.2644 49.4688 47.1993 49.9099 46.414 50.6952C45.6287 51.4805 45.1875 52.5457 45.1875 53.6562V57.8438C45.1875 58.9543 45.6287 60.0195 46.414 60.8048C47.1993 61.5901 48.2644 62.0312 49.375 62.0312H57.75C58.8606 62.0312 59.9257 61.5901 60.711 60.8048C61.4963 60.0195 61.9375 58.9543 61.9375 57.8438V53.6562C61.9375 52.5457 61.4963 51.4805 60.711 50.6952C59.9257 49.9099 58.8606 49.4688 57.75 49.4688ZM97.5312 45.2812C97.5312 44.726 97.3107 44.1934 96.918 43.8007C96.5254 43.4081 95.9928 43.1875 95.4375 43.1875C94.8822 43.1875 94.3496 43.4081 93.957 43.8007C93.5643 44.1934 93.3438 44.726 93.3438 45.2812V47.375H97.5312V45.2812ZM55.6562 45.2812C55.6562 44.726 55.4357 44.1934 55.043 43.8007C54.6504 43.4081 54.1178 43.1875 53.5625 43.1875C53.0072 43.1875 52.4746 43.4081 52.082 43.8007C51.6893 44.1934 51.4688 44.726 51.4688 45.2812V47.375H55.6562V45.2812Z"
      fill="#6200EE"
    />
    <defs>
      <filter
        id="filter0_f_0_1"
        x="0"
        y="0"
        width="174"
        height="174"
        filterUnits="userSpaceOnUse"
        color-interpolation-filters="sRGB"
      >
        <feFlood flood-opacity="0" result="BackgroundImageFix" />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="BackgroundImageFix"
          result="shape"
        />
        <feGaussianBlur stdDeviation="12" result="effect1_foregroundBlur_0_1" />
      </filter>
    </defs>
  </motion.svg>
);

const Bulb = () => (
  <motion.svg
    width="80"
    height="80"
    viewBox="0 0 150 150"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    initial={{ strokeDasharray: "0, 500" }}
    animate={{ strokeDasharray: "600, 500" }}
    transition={{ duration: 3, delay: 0, ease: "linear" }}
  >
    <rect
      x="0.75"
      y="0.75"
      width="143.5"
      height="143.5"
      rx="15.25"
      stroke="#0056E0"
      stroke-width="1.5"
    />
    <rect x="8" y="7" width="130" height="130" rx="16" fill="white" />
    <path
      d="M66.332 75.3335H79.6654C79.6654 77.1016 78.963 78.7973 77.7127 80.0475C76.4625 81.2978 74.7668 82.0002 72.9987 82.0002C71.2306 82.0002 69.5349 81.2978 68.2847 80.0475C67.0344 78.7973 66.332 77.1016 66.332 75.3335Z"
      fill="#6200EE"
    />
    <path
      d="M63.6149 66.2495V69.0832H71.3314V59.3566L68.4864 56.5116C68.1771 56.1984 68.0043 55.7756 68.0057 55.3354C68.007 54.8953 68.1825 54.4735 68.4937 54.1623C68.805 53.851 69.2267 53.6756 69.6669 53.6742C70.107 53.6728 70.5299 53.8456 70.8431 54.1548L72.998 56.3097L75.153 54.1547C75.4662 53.8455 75.8891 53.6727 76.3292 53.6741C76.7694 53.6755 77.1911 53.8509 77.5024 54.1622C77.8136 54.4734 77.9891 54.8952 77.9904 55.3353C77.9918 55.7755 77.819 56.1983 77.5097 56.5115L74.6647 59.3566V69.0832H82.3812V66.2495C85.152 64.2629 87.2208 61.4482 88.2897 58.2107C89.3586 54.9732 89.3723 51.48 88.329 48.2341C87.2857 44.9883 85.2391 42.1574 82.484 40.149C79.7289 38.1407 76.4074 37.0586 72.998 37.0586C69.5887 37.0586 66.2672 38.1407 63.5121 40.149C60.757 42.1574 58.7104 44.9883 57.6671 48.2341C56.6238 51.48 56.6375 54.9732 57.7064 58.2107C58.7753 61.4482 60.8441 64.2629 63.6149 66.2495Z"
      fill="#6200EE"
    />
    <path
      d="M74.1005 71.5835H63.6172V72.0002C63.6172 73.3262 64.144 74.598 65.0817 75.5357C66.0193 76.4734 67.2911 77.0002 68.6172 77.0002H77.3835C78.7095 77.0002 79.9813 76.4734 80.919 75.5357C81.8567 74.598 82.3835 73.3262 82.3835 72.0002V71.5835H74.1005Z"
      fill="#6200EE"
    />
    <path
      d="M99.6673 55.3333H94.7878C94.3457 55.3333 93.9218 55.1577 93.6092 54.8452C93.2967 54.5326 93.1211 54.1087 93.1211 53.6667C93.1211 53.2246 93.2967 52.8007 93.6092 52.4882C93.9218 52.1756 94.3457 52 94.7878 52H99.6673C100.109 52 100.533 52.1756 100.846 52.4882C101.158 52.8007 101.334 53.2246 101.334 53.6667C101.334 54.1087 101.158 54.5326 100.846 54.8452C100.533 55.1577 100.109 55.3333 99.6673 55.3333Z"
      fill="#6200EE"
    />
    <path
      d="M92.9985 48.6852C92.6693 48.6852 92.3474 48.5877 92.0736 48.4049C91.7998 48.2222 91.5862 47.9625 91.4598 47.6585C91.3334 47.3545 91.2998 47.0199 91.3634 46.6969C91.4269 46.3739 91.5847 46.0769 91.8168 45.8434L95.1502 42.4914C95.4618 42.178 95.8852 42.0012 96.3272 42C96.7692 41.9988 97.1936 42.1732 97.5069 42.4848C97.8203 42.7965 97.9971 43.2199 97.9983 43.6619C97.9996 44.1039 97.8252 44.5283 97.5135 44.8416L94.1802 48.1937C94.0255 48.3498 93.8415 48.4736 93.6386 48.558C93.4358 48.6424 93.2182 48.6856 92.9985 48.6852Z"
      fill="#6200EE"
    />
    <path
      d="M96.3319 65.3332C96.1122 65.3336 95.8946 65.2903 95.6917 65.2059C95.4889 65.1216 95.3048 64.9977 95.1502 64.8416L91.8169 61.4896C91.5052 61.1762 91.3308 60.7518 91.332 60.3098C91.3333 59.8679 91.51 59.4445 91.8234 59.1328C92.1368 58.8211 92.5612 58.6467 93.0032 58.648C93.4452 58.6492 93.8685 58.8259 94.1802 59.1393L97.5135 62.4914C97.7457 62.7248 97.9034 63.0218 97.967 63.3448C98.0305 63.6678 97.997 64.0024 97.8706 64.3064C97.7442 64.6104 97.5306 64.8701 97.2568 65.0529C96.9829 65.2356 96.6611 65.3331 96.3319 65.3332Z"
      fill="#6200EE"
    />
    <path
      d="M51.2142 55.3333H46.3346C45.8926 55.3333 45.4687 55.1577 45.1561 54.8452C44.8436 54.5326 44.668 54.1087 44.668 53.6667C44.668 53.2246 44.8436 52.8007 45.1561 52.4882C45.4687 52.1756 45.8926 52 46.3346 52H51.2142C51.6562 52 52.0801 52.1756 52.3927 52.4882C52.7053 52.8007 52.8809 53.2246 52.8809 53.6667C52.8809 54.1087 52.7053 54.5326 52.3927 54.8452C52.0801 55.1577 51.6562 55.3333 51.2142 55.3333Z"
      fill="#6200EE"
    />
    <path
      d="M52.9998 48.6855C52.7802 48.6859 52.5626 48.6426 52.3597 48.5582C52.1569 48.4739 51.9728 48.35 51.8182 48.1939L48.4848 44.8419C48.1732 44.5285 47.9988 44.1041 48 43.6621C48.0012 43.2202 48.178 42.7968 48.4914 42.4851C48.8048 42.1734 49.2292 41.999 49.6711 42.0003C50.1131 42.0015 50.5365 42.1782 50.8482 42.4916L54.1815 45.8437C54.4136 46.0771 54.5714 46.3741 54.635 46.6971C54.6985 47.0201 54.665 47.3547 54.5386 47.6587C54.4122 47.9627 54.1986 48.2224 53.9247 48.4052C53.6509 48.5879 53.3291 48.6854 52.9998 48.6855Z"
      fill="#6200EE"
    />
    <path
      d="M49.6665 65.3334C49.3372 65.3334 49.0154 65.2358 48.7416 65.0531C48.4677 64.8704 48.2541 64.6106 48.1277 64.3067C48.0013 64.0027 47.9678 63.6681 48.0313 63.3451C48.0949 63.022 48.2527 62.7251 48.4848 62.4916L51.8181 59.1396C51.9724 58.9844 52.1558 58.8611 52.3578 58.7768C52.5597 58.6925 52.7763 58.6488 52.9952 58.6482C53.214 58.6476 53.4308 58.6901 53.6333 58.7733C53.8357 58.8565 54.0197 58.9787 54.1749 59.133C54.3301 59.2874 54.4534 59.4707 54.5377 59.6727C54.622 59.8747 54.6657 60.0912 54.6663 60.3101C54.6669 60.5289 54.6244 60.7458 54.5412 60.9482C54.458 61.1506 54.3358 61.3347 54.1815 61.4898L50.8481 64.8419C50.6935 64.998 50.5094 65.1218 50.3066 65.2062C50.1037 65.2906 49.8862 65.3338 49.6665 65.3334Z"
      fill="#6200EE"
    />
    <path
      d="M100.295 86.4967C100.202 85.8289 99.9466 85.194 99.5508 84.6481C99.155 84.1023 98.6311 83.6621 98.0251 83.3664C97.4018 83.0541 96.7106 82.9019 96.0137 82.9237C95.3169 82.9454 94.6365 83.1404 94.0339 83.4909L80.1806 93.7924C79.458 94.2016 78.6416 94.4165 77.8111 94.416H71.9121C71.7031 94.4177 71.4958 94.378 71.3022 94.2991C71.1086 94.2203 70.9325 94.1039 70.7841 93.9566C70.6357 93.8094 70.5179 93.6342 70.4375 93.4413C70.3571 93.2483 70.3157 93.0413 70.3157 92.8323C70.3157 92.6232 70.3571 92.4162 70.4375 92.2233C70.5179 92.0303 70.6357 91.8551 70.7841 91.7079C70.9325 91.5607 71.1086 91.4443 71.3022 91.3654C71.4958 91.2866 71.7031 91.2468 71.9121 91.2485H76.2397C76.9772 91.2473 77.6846 90.9564 78.2096 90.4384C78.7345 89.9204 79.0348 89.2169 79.0459 88.4795V88.4295C79.0421 87.6876 78.7449 86.9774 78.2191 86.454C77.6933 85.9306 76.9817 85.6366 76.2397 85.6362H58.2023V104.506C58.2048 104.71 58.1881 104.915 58.1523 105.117H79.2428C81.4189 105.118 83.5174 104.309 85.1293 102.847L98.6608 90.525C99.2532 90.0479 99.7142 89.4275 100 88.7227C100.286 88.0178 100.387 87.2517 100.295 86.4967Z"
      fill="#6200EE"
    />
    <path
      d="M47.1584 82.0566H53.836C54.4977 82.0566 55.1322 82.3195 55.6001 82.7873C56.0679 83.2552 56.3308 83.8898 56.3308 84.5514V104.506C56.3308 104.833 56.2663 105.157 56.1409 105.46C56.0156 105.763 55.8318 106.038 55.6002 106.269C55.3686 106.501 55.0936 106.685 54.791 106.81C54.4883 106.935 54.164 107 53.8364 107H47.1588C46.4972 107 45.8626 106.737 45.3948 106.269C44.9269 105.801 44.6641 105.167 44.6641 104.505V84.551C44.6641 84.2234 44.7286 83.899 44.8539 83.5964C44.9793 83.2938 45.163 83.0188 45.3946 82.7872C45.6263 82.5556 45.9013 82.3718 46.2039 82.2465C46.5065 82.1211 46.8309 82.0566 47.1584 82.0566Z"
      fill="#6200EE"
    />
  </motion.svg>
);

const BulbLine = () => (
  <motion.svg
    width="100"
    height="105"
    viewBox="0 0 221 195"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    initial={{ strokeDasharray: 420, strokeDashoffset: 420, stroke: "#444444" }}
    animate={{
      strokeDashoffset: 0,
      stroke: ["#444444", "#0056E0", "#444444"], // Animation sequence for color change
    }}
    transition={{
      duration: 3,
      ease: "linear",
    }}
  >
    <motion.path
      d="M220 195V25C220 11.7452 209.255 1 196 1H3.45707e-06"
      strokeWidth="2"
    />
  </motion.svg>
);

const HandLine = () => (
  <motion.svg
    width="150"
    height="98"
    viewBox="0 0 318 98"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    initial={{ strokeDasharray: 420, strokeDashoffset: 420, stroke: "#444444" }}
    animate={{
      strokeDashoffset: 0,
      stroke: ["#444444", "#0056E0", "#444444"],
    }}
    transition={{
      duration: 3,
      ease: "linear",
      delay: 3,
    }}
  >
    {/* <motion.path
      d="M318 1H152.298C139.043 1 128.298 11.7452 128.298 25V73C128.298 86.2548 117.553 97 104.298 97H0"
      strokeWidth="2"
    /> */}
    <motion.path
      d="M0 97H104.298C117.553 97 128.298 86.2548 128.298 73V25C128.298 11.7452 139.043 1 152.298 1H318"
      strokeWidth="2"
    />
  </motion.svg>
);

const BarLine = () => (
  <motion.svg
    width="150"
    height="172"
    viewBox="0 0 285 172"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    initial={{ strokeDasharray: 420, strokeDashoffset: 420, stroke: "#444444" }}
    animate={{
      strokeDashoffset: 0,
      stroke: ["#444444", "#0056E0", "#444444"], // Color transition
    }}
    transition={{
      duration: 3,
      ease: "linear",
      delay: 6, // Starts after HandLine finishes
    }}
  >
    <motion.path
      d="M1 7.53999e-06L1 78.606C1 91.8608 11.7452 102.606 25 102.606L260 102.606C273.255 102.606 284 113.351 284 126.606V172"
      strokeWidth="2"
    />
  </motion.svg>
);

const GraphLine = () => (
  <motion.svg
    width="90"
    height="145"
    viewBox="0 0 180 165"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    initial={{ strokeDasharray: 420, strokeDashoffset: 420, stroke: "#444444" }}
    animate={{
      strokeDashoffset: 0,
      stroke: ["#444444", "#0056E0", "#444444"], // Color transition
    }}
    transition={{
      duration: 3,
      ease: "linear",
      delay: 9, // Starts after BarLine finishes
    }}
  >
    {/* <motion.path d="M1 165V25C1 11.7452 11.7452 1 25 1H180" strokeWidth="2" /> */}
    <motion.path d="M180 1H25C11.7452 1 1 11.7452 1 25V165" strokeWidth="2" />
  </motion.svg>
);
const LogoSvg = () => (
  <svg
    width="70"
    height="70"
    viewBox="0 0 126 126"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <rect width="126" height="126" rx="16" fill="#FBAD02" />
    <g clip-path="url(#clip0_0_1)">
      <path
        d="M25.9425 75.2129H22.2422L25.3756 88.1727L27.0405 81.0363L25.9425 75.2129ZM38.8041 75.2129L36.742 86.0521L35.972 90.1013H38.8265L42.5267 75.2129H38.8041ZM30.5131 75.2129L27.9845 86.0521L27.0383 90.1013H30.0266L32.3722 80.3037L34.2201 88.2897L35.6082 80.9918L34.3138 75.2129H30.5131Z"
        fill="#58595B"
      />
      <path
        d="M44.2656 90.099H52.9606V87.1943H44.2656V90.099ZM44.2656 75.2129V78.1176H52.9606V75.2129H44.2656ZM52.3535 81.1299H44.2656V83.9292H52.3535V81.1299Z"
        fill="white"
      />
      <path
        d="M63.4109 75.2129H59.4071L54.2695 90.1013H57.8895L61.3889 79.22L64.8883 90.1013H68.5484L63.4109 75.2129Z"
        fill="#58595B"
      />
      <path
        d="M73.5664 87.302H78.0969V90.1013H70.1094V75.2129H73.5664V87.302Z"
        fill="white"
      />
      <path
        d="M89.9624 75.2129V78.1176H86.2019V90.1013H82.7449V78.1176H78.9844V75.2129H89.9647H89.9624Z"
        fill="#58595B"
      />
      <path
        d="M104 75.2129V90.1013H100.543V83.9714H95.164V90.1013H91.707V75.2129H95.164V81.0456H100.543V75.2129H104Z"
        fill="white"
      />
    </g>
    <path
      d="M45.0577 46.4771C44.6738 45.7701 44.0991 45.2145 43.3292 44.8105C42.5614 44.4087 41.6203 44.209 40.5082 44.209H35V47.0786H40.2471C40.8964 47.0786 41.3812 47.2393 41.6971 47.5561C42.0152 47.8752 42.1753 48.3275 42.1753 48.9083C42.1753 49.4891 42.0152 49.9413 41.6971 50.2604C41.379 50.5795 40.8942 50.738 40.2471 50.738H35V58.8096H38.4001V53.5663H40.506C41.6445 53.5663 42.5987 53.3528 43.3686 52.9212C44.1364 52.4919 44.7067 51.9271 45.0775 51.2269C45.4482 50.5267 45.6346 49.7531 45.6346 48.9083C45.6346 47.9923 45.4438 47.1819 45.0577 46.4748V46.4771Z"
      fill="white"
    />
    <path
      d="M55.4733 44.209H51.538L46.4883 58.8119H50.0463L53.4859 48.1392L56.9255 58.8119H60.523L55.4733 44.209Z"
      fill="#58595B"
    />
    <path
      d="M79.2543 57.9992C78.1619 57.361 77.2932 56.4702 76.6505 55.327C76.0078 54.1837 75.6875 52.8958 75.6875 51.4679C75.6875 50.04 76.0078 48.7567 76.6505 47.6203C77.2932 46.4839 78.1619 45.5955 79.2543 44.9573C80.3467 44.3191 81.551 44 82.8628 44C84.1746 44 85.3767 44.3191 86.4713 44.9573C87.5637 45.5955 88.4258 46.4839 89.0554 47.6203C89.6849 48.7567 89.9986 50.04 89.9986 51.4679C89.9986 52.8958 89.6806 54.1814 89.0444 55.327C88.4083 56.4702 87.5462 57.3633 86.4603 57.9992C85.3745 58.6374 84.1746 58.9565 82.8628 58.9565C81.551 58.9565 80.3489 58.6374 79.2543 57.9992ZM85.5346 54.5464C86.2037 53.7705 86.5393 52.7443 86.5393 51.4679C86.5393 50.1915 86.2037 49.1493 85.5346 48.3779C84.8656 47.6088 83.975 47.2232 82.8606 47.2232C81.7463 47.2232 80.8359 47.6042 80.1669 48.3664C79.4978 49.1286 79.1622 50.1617 79.1622 51.4656C79.1622 52.7696 79.4956 53.7843 80.1669 54.5556C80.8359 55.3247 81.7331 55.7104 82.8606 55.7104C83.9881 55.7104 84.8656 55.3224 85.5346 54.5464Z"
      fill="#58595B"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M74.378 44.209L69.8175 51.5093L67.8871 54.5947L65.2526 58.8096H61.3984L65.959 51.5093L67.8871 48.4239L70.5195 44.209H74.378ZM66.6807 46.4932L64.7525 49.5786L61.3984 44.209H65.2526L66.6807 46.4932ZM70.5196 58.8095H74.3782L71.0219 53.4398L69.0938 56.5275L70.5196 58.8095Z"
      fill="white"
    />
    <defs>
      <clipPath id="clip0_0_1">
        <rect
          width="82"
          height="15"
          fill="white"
          transform="translate(22 75)"
        />
      </clipPath>
    </defs>
  </svg>
);
function EarningsSteps() {
  const { ref, inView } = useInView({
    triggerOnce: false,
  });
  return (
    <div className="bg-[#F5F9FF] text-black md:pt-10 pt-14 ">
      <div className=" md:mx-20 mx-5">
        <div className="md:flex justify-between">
          <div className="font-meuthanies">
            <h1 className="text-4xl mt-3 mb-6 font-meuthanies">
              <span className="relative inline-block">
                <span className="absolute inset-0 bg-customYellow transform rotate-[-3deg]"></span>
                <span className="relative z-10">Secure Earnings</span>
              </span>
              <br />
              <h1 className="mt-2">Made Simple in 4 Steps</h1>
            </h1>
          </div>
          <p className=" md:mt-14 text-[16px] md:px-20 xl:px-80 font-sf-pro">
            From exploring opportunities to enjoying <br />
            consistent payouts, Paxo Wealth makes it easy.
          </p>
        </div>
        {/* Step 1: Discover Opportunities */}
        <div className="flex font-sf-pro">
          <div>
            <div className=" mb-8 md:mt-16 mt-4">
              <h2 className="text-2xl xl:text-3xl font-meuthanies mb-4 text-customBlue">
                Discover Opportunities
              </h2>
              <p className="text-[14px] xl:text-[17px] text-gray-400">
                Choose from our tailored solutions - Boost Income, Rent Rise, or
                Direct <br />
                Save. Easily browse through verified and secure plans suited to
                your goals.
              </p>
            </div>

            {/* Step 2: Select & Activate your Earnings */}
            <div className=" mt-6 ">
              <h2 className="text-2xl xl:text-3xl font-meuthanies mb-4   text-customBlue">
                Select & Activate your Earnings
              </h2>
              <p className="text-[14px] xl:text-[17px] text-gray-400">
                Pick a plan that matches your preferences, confirm the details,
                and let us
                <br /> take care of the rest. No stress, no complicated
                processes.
              </p>
            </div>

            {/* Step 3: Stay in Control */}
            <div className="  mt-6">
              <h2 className="text-2xl xl:text-3xl font-meuthanies mb-4  text-customBlue">
                Stay in Control
              </h2>
              <p className="text-[14px] xl:text-[17px] text-gray-400">
                Access your personalized dashboard to track payouts, agreements,
                and
                <br />
                progress in real-time, all in one place.
              </p>
            </div>

            {/* Step 4: Enjoy Seamless Growth */}
            <div className=" mb-20  mt-6">
              <h2 className="text-2xl xl:text-3xl font-meuthanies mb-4  text-customBlue">
                Enjoy Seamless Growth
              </h2>
              <p className="text-[14px] xl:text-[17px] text-gray-400">
                Experience consistent earnings delivered directly to you,
                <br /> securely and hassle-free.
              </p>
            </div>
          </div>

          <div
            ref={ref}
            className="mt-16 justify-center items-center md:ml-[350px] xl:ml-[500px] hidden lg:block"
          >
            {inView && (
              <div className="relative h-96  rounded-lg shadow-lg">
                <div className="absolute right-[85px] top-[26px] p-4  rounded-lg">
                  <Bulb />
                </div>
                <div className="absolute top-14 -left-[120px] p-4  rounded-lg">
                  <BulbLine />
                </div>

                <div className="absolute top-[87px] left-[157px] p-4  rounded-lg">
                  <Hand />
                </div>
                <div className="absolute top-[103px] left-[10px] p-4  rounded-lg">
                  <HandLine />
                </div>
                <div className="absolute inset-0 flex justify-center items-center">
                  <div className=" p-6 rounded-full">
                    {/* <img src={Image} alt="" className="w-20 h-20" /> */}
                    {/* <h1 className="font-meuthanies text-2xl">PAXO</h1> */}
                    <LogoSvg />
                  </div>
                </div>
                <div className="absolute bottom-4 right-[64px] p-4  rounded-lg">
                  <Graph />
                </div>
                <div className="absolute bottom-[64px] -left-[140px] p-4  rounded-lg">
                  <GraphLine />
                </div>
                <div className="absolute -bottom-[19px] left-[98px] p-4  rounded-lg">
                  <Bar />
                </div>
                <div className="absolute bottom-[12px] -left-[20px] p-4  rounded-lg">
                  <BarLine />
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}

export default EarningsSteps;
